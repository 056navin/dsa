Given two integers n and k, return all possible combinations of k numbers out of the range [1, n].

You may return the answer in any order.

 

Example 1:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
Example 2:

Input: n = 1, k = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20
1 <= k <= n
solutions:
class Solution {
public:
    vector<vector<int>> ans;
    void findcom(int i,int n,int k,vector<int> &temp)
    {
        if(temp.size()==k)
        {
            ans.push_back(temp);
            return;
        }
       if(i>n)
           return;
        temp.push_back(i);
        findcom(i+1,n,k,temp);
        temp.pop_back();
        findcom(i+1,n,k,temp);
           
    }
    vector<vector<int>> combine(int n, int k) {
             int i=1;
        vector<int> temp;
        findcom(i,n,k,temp);
        return ans;
    }
};
